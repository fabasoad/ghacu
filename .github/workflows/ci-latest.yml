---
name: CI (latest)

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  unit:
    name: Unit Testing
    timeout-minutes: 5
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2.3.1
        with:
          ref: ${{ github.ref }}
      - run: dotnet test
  functional:
    timeout-minutes: 10
    name: Functional Testing
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]    
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup .NET Core SDK
        if: ${{ matrix.os != 'windows-latest' }}
        uses: actions/setup-dotnet@v1.5.0
        with:
          dotnet-version: 5.0.0-preview.6
      - name: Install application (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          Invoke-WebRequest -Uri https://github.com/fabasoad/ghacu/releases/download/v2.0.0/ghacu-2.0.0-win-x64.tgz -OutFile ghacu-2.0.0-win-x64.tgz
          tar -xvf ghacu-2.0.0-win-x64.tgz
          $env:Path += ";${{ github.workspace }}\ghacu-2.0.0-win-x64"
          Write-Output "::set-env name=PATH::$env:Path"
        shell: pwsh
      - name: Install application (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          cd ~ && wget https://github.com/fabasoad/ghacu/releases/download/v2.0.0/ghacu-2.0.0-linux-x64.tgz
          tar -xvf ghacu-2.0.0-linux-x64.tgz
          chmod +x ~/ghacu-2.0.0-linux-x64/ghacu
          PATH=$PATH:~/ghacu-2.0.0-linux-x64
          echo "::set-env name=PATH::$PATH"
      - name: Install application (MacOS)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          cd ~ && wget https://github.com/fabasoad/ghacu/releases/download/v2.0.0/ghacu-2.0.0-osx-x64.tgz
          tar -xvf ghacu-2.0.0-osx-x64.tgz
          chmod +x ~/ghacu-2.0.0-osx-x64/ghacu
          PATH=$PATH:~/ghacu-2.0.0-osx-x64
          echo "::set-env name=PATH::$PATH"
      - name: Run GHACU
        run: ghacu --version
