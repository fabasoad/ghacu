---
name: CI (main)

on:
  push:
    branches:
      - main
      - 'bugfix/**'
      - 'feature/**'
      - 'release/**'
  pull_request:
    branches:
      - main

jobs:
  unit:
    name: Unit Testing
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.1
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.5.0
        with:
          dotnet-version: 5.0.100-preview.6.20318.15
      - name: Run tests
        run: dotnet test ./GHACU.sln /p:CollectCoverage=true /p:MergeWith=$(pwd)/coverage/coverage.json /p:CoverletOutput=$(pwd)/coverage/ "/p:CoverletOutputFormat=\"json,opencover\""
      - name: Upload report to CodeCov
        if: github.event_name == 'push'
        uses: codecov/codecov-action@v1.0.10
        with:
          file: ${{ github.workspace }}/coverage/coverage.opencover.xml
          flags: unittests
          fail_ci_if_error: true
          name: ${{ github.sha }}
  functional:
    timeout-minutes: 10
    name: Functional Testing
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]    
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2.3.1
      - name: Get latest release
        id: latest_version
        uses: pozetroninc/github-action-get-latest-release@v0.4.0
        with:
          owner: fabasoad
          repo: ghacu
      - name: Define GHACU_VERSION env
        run: |
          tag_name=${{ steps.latest_version.outputs.release }}
          echo "ghacu latest version is ${tag_name:1}"
          echo "::set-env name=GHACU_VERSION::${tag_name:1}"
        shell: bash
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.5.0
        with:
          dotnet-version: 5.0.100-preview.6.20318.15
      - name: Build
        run: |
          dotnet clean
          dotnet build -c Release -p:Version=$GHACU_VERSION
      - name: Run ghacu
        run: dotnet ./src/Ghacu.Runner/bin/Release/netcoreapp5.0/ghacu.dll --no-cache --repository "${{ github.workspace }}" --token ${{ secrets.GITHUB_TOKEN }} --log-level Information
