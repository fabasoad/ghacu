---
name: CI (main)

on:
  push:
    branches:
      - 'main'
      - 'bugfix/**'
      - 'dependabot/*'
      - 'feature/**'

jobs:
  unit:
    name: Unit Testing
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: 5.0.100-preview.7.20366.6
      - name: Run tests
        run: dotnet test ./GHACU.sln /p:CollectCoverage=true /p:MergeWith=$(pwd)/coverage/coverage.json /p:CoverletOutput=$(pwd)/coverage/ "/p:CoverletOutputFormat=\"json,opencover\""
      - name: Upload report to CodeCov
        if: github.event_name == 'push'
        uses: codecov/codecov-action@v2.1.0
        with:
          files: ${{ github.workspace }}/coverage/coverage.opencover.xml
          flags: unittests
          fail_ci_if_error: true
          name: ${{ github.sha }}
  functional:
    timeout-minutes: 10
    name: Functional Testing
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: 5.0.100-preview.7.20366.6
      - name: Get latest release
        id: latest_release
        run: |
          tag_name=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -s $GITHUB_API_URL/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name')
          echo "ghacu latest version is ${tag_name:1}"
          echo "::set-output name=version::${tag_name:1}"
        shell: bash
      - name: Build
        run: |
          dotnet clean
          dotnet build -c Release -p:Version=${{ steps.latest_release.outputs.version }}
        shell: bash
      - name: Run ghacu
        run: dotnet ./src/Ghacu.Runner/bin/Release/netcoreapp5.0/ghacu.dll --no-cache --repository "${{ github.workspace }}" --token ${{ secrets.GITHUB_TOKEN }} --log-level Information
